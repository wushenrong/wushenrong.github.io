{% capture headingsWorkspace %}
  {% comment %}
    SPDX-FileCopyrightText: 2018 Vladimir "allejo" Jimenez

    SPDX-License-Identifier: MIT
  {% endcomment %}
  {% comment %}
    Copyright (c) 2018 Vladimir "allejo" Jimenez

    Permission is hereby granted, free of charge, to any person
    obtaining a copy of this software and associated documentation
    files (the "Software"), to deal in the Software without
    restriction, including without limitation the rights to use,
    copy, modify, merge, publish, distribute, sublicense, and/or sell
    copies of the Software, and to permit persons to whom the
    Software is furnished to do so, subject to the following
    conditions:

    The above copyright notice and this permission notice shall be
    included in all copies or substantial portions of the Software.

    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
    EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
    OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
    NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
    HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
    WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
    FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
    OTHER DEALINGS IN THE SOFTWARE.
  {% endcomment %}
  {% comment %}
    Version 1.0.13
      https://github.com/allejo/jekyll-anchor-headings

    "Be the pull request you wish to see in the world." ~Ben Balter

    Usage:
      {% include anchor_headings.html html=content anchorBody="#" %}

    Parameters:
      * html          (string) - the HTML of compiled markdown generated by kramdown in Jekyll

    Output:
      The original HTML with the addition of anchors inside all of the h1-h6 headings.
  {% endcomment %}

  {% assign nodes = include.html | split: '<h' %}

  {% capture edited_headings %}{% endcapture %}

  {% for _node in nodes %}
    {% capture node %}{{ _node | strip }}{% endcapture %}

    {% if node == "" %}
      {% continue %}
    {% endif %}

    {% assign nextChar = node | replace: '"', '' | strip | slice: 0, 1 %}
    {% assign headerLevel = nextChar | times: 1 %}

    <!-- If the level is cast to 0, it means it's not a h1-h6 tag, so let's see if we need to fix it -->
    {% if headerLevel == 0 %}
      <!-- Split up the node based on closing angle brackets and get the first one. -->
      {% assign firstChunk = node | split: '>' | first %}

      <!-- If the first chunk does NOT contain a '<', that means we've broken another HTML tag that starts with 'h' -->
      {% unless firstChunk contains '<' %}
        {% capture node %}<h{{ node }}{% endcapture %}
      {% endunless %}

      {% capture edited_headings %}{{ edited_headings }}{{ node }}{% endcapture %}
      {% continue %}
    {% endif %}

    {% capture _closingTag %}</h{{ headerLevel }}>{% endcapture %}
    {% assign _workspace = node | split: _closingTag %}
    {% capture _hAttrToStrip %}{{ _workspace[0] | split: '>' | first }}>{% endcapture %}
    {% assign header = _workspace[0] | replace: _hAttrToStrip, '' %}
    {% assign escaped_header = header | strip_html | strip %}

    {% assign _classWorkspace = _workspace[0] | split: 'class="' %}
    {% assign _classWorkspace = _classWorkspace[1] | split: '"' %}
    {% assign _html_class = _classWorkspace[0] %}

    {% if _html_class contains "no_anchor" %}
      {% assign skip_anchor = true %}
    {% else %}
      {% assign skip_anchor = false %}
    {% endif %}

    {% assign _idWorkspace = _workspace[0] | split: 'id="' %}
    {% if _idWorkspace[1] %}
      {% assign _idWorkspace = _idWorkspace[1] | split: '"' %}
      {% assign html_id = _idWorkspace[0] %}
    {% endif %}

    <!-- Build the anchor to inject for our heading -->
    {% capture anchor %}{% endcapture %}

    {% if skip_anchor == false and html_id %}
      {% capture anchor %}href="#{{ html_id }}" class="sr-only sr-only-focusable"{% endcapture %}

      {% capture anchor %}{{ anchor }} {{ 'aria-label="Permalink to %heading%"' | replace: '%heading%', escaped_header }}{% endcapture %}

      {% capture anchor %}<a {{ anchor }}>{% octicon link height: 24 aria-hidden: true %}</a>{% endcapture %}

      <!-- In order to prevent adding extra space after a heading, we'll let the 'anchor' value contain it -->
      {% capture anchor %} {{ anchor }}{% endcapture %}
    {% endif %}

    {% capture new_heading %}
<h{{ _hAttrToStrip }}
    {{ header }}{{ anchor }}
</h{{ headerLevel }}>
    {% endcapture %}

    <!--
    If we have content after the `</hX>` tag, then we'll want to append that here so we don't lost any content.
    -->
    {% assign chunkCount = _workspace | size %}
    {% if chunkCount > 1 %}
      {% capture new_heading %}{{ new_heading }}{{ _workspace | last }}{% endcapture %}
    {% endif %}

    {% capture edited_headings %}{{ edited_headings }}{{ new_heading }}{% endcapture %}
  {% endfor %}
{% endcapture %}{% assign headingsWorkspace = '' %}{{ edited_headings | strip }}
